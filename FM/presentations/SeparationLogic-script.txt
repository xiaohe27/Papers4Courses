Title: Overview of Separation Logic

Thank you all for attending my presentation today.

In this presentation, I will introduce separation logic from a beginner's perspective.

=======================================================================================

I will begin with the motivation of separation logic; 

As we know, the Hoare Logic and its extensions are widely used for program analysis and reasoning for several decades;

However, back to 13 years ago, when the writer wrote the paper "Separation Logic: A Logic for Shared Mutable Data Structures",

the conventional Hoare Logic system did not provide a way to formally analyze programs with shared mutable data structures. 

Let's look at the simple example:

(From a programmer's perspective, shared mutable data structure is a kind of data structure which can be referenced by multiple different names, and can be updated at runtime)

At that time, popular P.L. like C/C++ have already had dynamic programming features like pointers, which are powerful, but programs with those features are also hard to analyze via existing verification techniques. Therefore, John C. Reynolds, Peter O'Hearn together with other researchers, developed an extension of Hoare Logic called Separation Logic to deal with the programs that use shared mutable data structure.


Now, I will describe more details about how separation logic extends Hoare logic in three aspects
to facilatate the reasoning of pointer programs.

//////////


I will then demonstrate how to use separation logic to verify properties
in a list-reversing program and a tree-copying procedure.

Finally, I will talk about the concept of Iterated Separating Conjunction
and its application in analyzing arrays.


==
Related work:
Matching logic:
Patterns can specify separation requirements at any level in any program configuration,
not only in the heaps or stores, without any special logical constructs for that: the very nature
of pattern matching is that if two structures are matched as part of a pattern, then they can
only be spatially separated.

Separation logic formulae can be encoded in matching logic and get solution.
